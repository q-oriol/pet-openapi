openapi: 3.0.0
info:
  version: 1.0.0
  title: Pet project
servers:
  - url: 'http://localhost:3000'
paths:
  /token:
    post:
      summary: 'Returns authorization token'
      operationID: getToken
      tags:
        - token
        - oauth2
      requestBody:
        description: 'oauth2 standard body'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Oauth2_password'
        required: true
      responses:
        '200':
          description: 'Access token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /user:
    get:
      summary: 'Sample endpoint: Returns details about a particular user'
      operationId: listUser
      tags:
        - user
      parameters:
        - name: id
          in: query
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a user by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Oauth2_password:
      type: object
      required:
        - grant_type
        - username
        - password
        - client_id
      properties:
        grant_type:
          enum:
            - 'password'
          default: 'password'
          type: string
          example: 'password'
          description: 'Type of authentication used'
        client_id: 
          type: string
          example: 'MyClientId'
          description: 'Id of the authorization client'
        password:
          type: string
          example: 'MyPassword'
          description: 'password used to authenticate'
        username:
          example: 'MyUsername'
          type: string
          description: 'username used to authenticate'
          
    Oauth2_client_credentials:
      type: object
      required:
        - grant_type
        - client_secret
        - client_id
      properties:
        grant_type:
          enum:
            - 'client_credentials'
          default: 'client_credentials'
          type: string
          description: 'Type of authentication used'
        client_id: 
          type: string
          example: 'MyclientId'
        client_secret:
          type: string
          example: 'MySecret'
          
    Oauth2_refresh_token:
      type: object
      required:
        - grant_type
        - client_id
        - client_secret
        - refresh_token
      properties:
        grant_type:
          enum:
            - 'refresh_token'
          default: 'refresh_token'
          type: string
          description: 'Type of authentication used'
        client_id: 
          type: string
          example: 'MyClient'
        client_secret:
          type: string
          example: 'MySecret'
        refresh_token:
          type: string
          example: 'MyToken'
          
    Token:
      type: object
      properties:
        access_token:
          type: string
          example: 'Thisisatoken'
        token_type: 
          type: string
          example: 'bearer'
        expires_in:
          type: string
          example: '1560'
        refresh_token:
          type: string
          example: 'this is a refreshtoken'
        scope:
          type: string
          example: '*'
    
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string